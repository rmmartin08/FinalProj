@model FinalProj.DATA.Lesson

@using Microsoft.AspNet.Identity;

@{
                ViewBag.Course = Model.Course.CourseName;
                ViewBag.Title = Model.LessonTitle;
}
<h1>@ViewBag.Course</h1>
<br />
<h2>@ViewBag.Title</h2>

<div>
    @if (Model.Introduction != null)
    {
    <h3>
        @Html.DisplayNameFor(model => model.Introduction)
    </h3>


    @Html.DisplayFor(model => model.Introduction)

    }
    <br />
    @if (Model.VideoURL != null)
    {
        <div class="player">
            <video class="player__video viewer" src="~/Content/assets/Video/652333414.mp4"></video>
            <div class="player__button toggle activePause">
                <div id="play__button" class="toggle button activePause"></div>

            </div>
            <div class="player__controls">
                <div class="progress">
                    <div class="progress__filled"></div>
                </div>
                <div class="playerButtons">
                    <div class="videoTitle"></div>
                    <div class="volume">Volume <input type="range" name="volume" class="player__slider" min="0" max="1" step="0.05" value="1"></div>
                </div>
            </div>
        </div>
    }

    @if (Model.PdfFilename != null)
    {
        <h3>
            Download and review <a href="~/Content/assets/pdfs/@Model.PdfFilename">this file</a> to complete this lesson
        </h3>
    }
</div>



@using (Html.BeginForm("SystemCreate", "LessonViews", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("lessonId", Model.LessonId);
    @Html.Hidden("userId", User.Identity.GetUserId());

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="completeButton" type="submit" value="Complete" class="btn btn-default" style="display: none" />
        </div>
    </div>
}

@section scripts{
    <script>
        const player = document.querySelector('.player');
        const video = player.querySelector('.viewer');
        const progress = player.querySelector('.progress');
        const progressBar = player.querySelector('.progress__filled');
        const toggle = player.querySelector('.toggle');
        const ranges = player.querySelectorAll('.player__slider');
        const fullPlay = document.querySelector('.player__button');
        const play = document.getElementById('play__button');
        const videoTitle = document.querySelector('.videoTitle');
        const finish = document.getElementById('completeButton');
        
        fullPlay.style.display = 'none';
       
        
        function togglePlay() {
            video[video.paused ? 'play' : 'pause']();
            if (this.paused) {
                fullPlay.style.display = 'unset';
                fullPlay.classList.add('activePause');
                play.style.display = 'unset';
                play.classList.add('activePause');                     
            } else {
                fullPlay.style.display = 'none';
                fullPlay.classList.remove('activePause');
                play.classList.remove('activePause');
            }
        }

        function handleProgress() {
            const percent = (video.currentTime / video.duration) * 100;
            progressBar.style.flexBasis = `${percent}%`;
            if (percent == 100) {
                finish.style.display = 'unset';
            }
        }

        video.addEventListener('click', togglePlay);
        fullPlay.addEventListener('click', togglePlay);
        play.addEventListener('click', togglePlay);
        video.addEventListener('timeupdate', handleProgress);
        toggle.addEventListener('click', togglePlay);

    </script>

}