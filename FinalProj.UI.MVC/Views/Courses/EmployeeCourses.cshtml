@model IEnumerable<FinalProj.DATA.Course>
@using FinalProj.DATA
@using Microsoft.AspNet.Identity

@{
    LMSEntities db = new LMSEntities();
    string userId = User.Identity.GetUserId();
    List<CourseCompletion> completedCourseId = db.CourseCompletions.Where(cc => cc.UserId == userId).ToList();
    List<Course> completedCourses = new List<Course>();
    List<Course> incompleteCourses = new List<Course>();
    int totalLessons = 0;
    int completeTotal = 0;
    int completePercentage = 0;

    foreach (var course in Model)
    {
        if (completedCourseId.Count() > 0)
        {
            foreach (var completion in completedCourseId)
            {
                if (course.CourseId == completion.CourseId)
                {
                    completedCourses.Add(course);
                }
                else
                {
                    if (course.IsActive == true)
                    {
                        incompleteCourses.Add(course);
                    }
                }
            }
        }
        else
        {
            if (course.IsActive == true)
            {
                incompleteCourses.Add(course);
            }
        }
    }
}
<br />
<br />
<h4>Incomplete Courses</h4>
<div class="col-md-11 autoMargin">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CourseName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CourseDescription)
            </th>
        </tr>

        @foreach (var item in incompleteCourses)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseDescription)
                </td>
            </tr>
            List<Lesson> lessons = db.Lessons.Where(l => l.CourseId == item.CourseId && l.isActive == true).OrderBy(l => l.LessonTitle).ToList();
            List<int> completedLessons = db.LessionViews.Where(lc => lc.Lesson.CourseId == item.CourseId && lc.UserId == userId).Select(lc => lc.LessonId).ToList();
            foreach (var lesson in lessons)
            {
                totalLessons += 1;
                if (completedLessons.Contains(lesson.LessonId))
                {

                    <tr class="lesson complete">
                        <td>
                            Lesson: @lesson.LessonTitle - Completed
                        </td>
                        <td></td>
                    </tr>
                    completeTotal += 1;
                }
                else
                {
                    <tr class="lesson clickable">
                        <td>
                            Lesson: @lesson.LessonTitle
                        </td>
                        <td>@Html.ActionLink("Details", "Details", "Lessons", new { Id = lesson.LessonId }, null)</td>
                    </tr>
                }
            }
        }
    </table>
</div>
@{ 
    completeTotal *= 100;
    completePercentage = completeTotal / totalLessons;
}
<br />
    <br />
    <div class="row">
        <h3 class="autoMargin">Overall Progress:</h3>
        <div class="col-md-8 progBar">
            <div class="studProg" style="width: @completePercentage%;">
            </div>
        </div>
    </div>

<br />
<br />
<h4>Completed Courses</h4>
<div class="col-md-11 autoMargin">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CourseName)
            </th>
        </tr>

        @foreach (var item in completedCourses)
        {
            <tr class="complete">
                <td>
                    @Html.DisplayFor(modelItem => item.CourseName)
                </td>
            </tr>
            List<Lesson> lessons = db.Lessons.Where(l => l.CourseId == item.CourseId).OrderBy(l => l.LessonTitle).ToList();
            foreach (var lesson in lessons)
            {
                <tr class="lesson complete complete-course">
                    <td>
                        Lesson: @lesson.LessonTitle
                    </td>
                </tr>
            }
        }
    </table>
</div>